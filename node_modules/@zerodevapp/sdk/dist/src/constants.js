"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC1155_ABI = exports.ERC20_ABI = exports.ERC721_ABI = exports.CHAIN_ID_TO_INFURA_NAME = exports.WALLET_CONNECT_RELAY_URL = exports.WALLET_CONNECT_PROJECT_ID = exports.INFURA_API_KEY = exports.UPDATE_SINGLETON_ADDRESS = exports.PAYMASTER_ADDRESS = exports.ENTRYPOINT_ADDRESS = exports.BUNDLER_URL = exports.PAYMASTER_ABI = exports.PAYMASTER_URL = exports.LOGGER_URL = exports.BACKEND_URL = void 0;
exports.BACKEND_URL = (_a = process.env.REACT_APP_ZERODEV_BACKEND_URL) !== null && _a !== void 0 ? _a : 'https://backend-vikp.onrender.com';
exports.LOGGER_URL = (_b = process.env.REACT_APP_ZERODEV_LOGGER_URL) !== null && _b !== void 0 ? _b : 'https://prod-logger.onrender.com';
exports.PAYMASTER_URL = (_c = process.env.REACT_APP_ZERODEV_PAYMASTER_URL) !== null && _c !== void 0 ? _c : 'https://prod-paymaster.onrender.com';
var paymaster_abi_json_1 = require("./abi/paymaster_abi.json");
Object.defineProperty(exports, "PAYMASTER_ABI", { enumerable: true, get: function () { return __importDefault(paymaster_abi_json_1).default; } });
exports.BUNDLER_URL = (_d = process.env.REACT_APP_ZERODEV_BUNDLER_URL) !== null && _d !== void 0 ? _d : 'https://prod-meta-bundler.onrender.com';
exports.ENTRYPOINT_ADDRESS = '0x0576a174D229E3cFA37253523E645A78A0C91B57';
exports.PAYMASTER_ADDRESS = '0x95341fe310FcDcA0d08c7b263773963ff4Bc3439';
exports.UPDATE_SINGLETON_ADDRESS = '0x3d4d0cab438cee791b7405cf10448daaa98087c0';
exports.INFURA_API_KEY = 'f36f7f706a58477884ce6fe89165666c';
exports.WALLET_CONNECT_PROJECT_ID = '9832ea3eefe6c1b75a689ed0c90ce085';
exports.WALLET_CONNECT_RELAY_URL = 'wss://relay.walletconnect.com';
exports.CHAIN_ID_TO_INFURA_NAME = {
    '1': 'mainnet',
    '5': 'goerli',
    '137': 'polygon-mainnet',
    '80001': 'polygon-mumbai',
    '10': 'optimism-mainnet',
    '420': 'optimism-goerli',
    '42161': 'arbitrum-mainnet',
    '421613': 'arbitrum-goerli',
    '43114': 'avalanche-mainnet',
    '43113': 'avalanche-fuji',
    '1313161554': 'aurora-mainnet',
    '1313161555': 'aurora-testnet',
};
exports.ERC721_ABI = [
    "function transferFrom(address from, address to, uint256 tokenId) external",
    "function safeTransferFrom(address from, address to, uint256 tokenId) external",
    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata _data) external",
    "function balanceOf(address owner) external view returns (uint256 balance)",
];
exports.ERC20_ABI = [
    "function transfer(address to, uint256 value) external returns (bool)",
    "function transferFrom(address from, address to, uint256 value) external returns (bool)",
    "function approve(address spender, uint256 value) external returns (bool)",
    "function allowance(address owner, address spender) external view returns (uint256)",
    "function balanceOf(address owner) external view returns (uint256)",
];
exports.ERC1155_ABI = [
    "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external",
    "function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external",
    "function balanceOf(address account, uint256 id) external view returns (uint256)",
    "function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory)",
];
//# sourceMappingURL=constants.js.map